model.add(Conv2D(64, kernel_size=(5, 5), strides=(1, 1),
                        activation='relu',
                        input_shape=input_shape))
        model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
        model.add(Conv2D(128, (5, 5), activation='relu'))
        model.add(MaxPooling2D(pool_size=(2, 2)))
        model.add(Flatten())
        model.add(Dense(1000, activation='relu'))

train size:200 test size:40
train_time_ave: 2070.7240036010744 test_time_ave: 0.30864248275756834
test_loss_ave: 0.49123767991550266 test_acc_ave: 0.8950000000000001
train size:240 test size:40
train_time_ave: 2474.4897681474686 test_time_ave: 0.30688474178314207
test_loss_ave: 0.5615766926109791 test_acc_ave: 0.9100000000000001
train size:280 test size:40
train_time_ave: 2883.1916085958483 test_time_ave: 0.30528531074523924
test_loss_ave: 0.7178058449630044 test_acc_ave: 0.9024999999999999
train size:320 test size:40
train_time_ave: 3290.9432814359666 test_time_ave: 0.30385875701904297
test_loss_ave: 0.5661720882705412 test_acc_ave: 0.8925000000000001
train size:360 test size:40
train_time_ave: 3700.590873670578 test_time_ave: 0.30803608894348145
test_loss_ave: 0.6895401479704015 test_acc_ave: 0.8925000000000001
